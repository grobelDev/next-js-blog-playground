{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/anti/Documents/GitHub/next-js-personal-website/next-js-with-markdown/pages/post/[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nexport default function PostTemplate({\n  content,\n  data\n}) {\n  // This holds the data between `---` from the .md file\n  const frontmatter = data;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, frontmatter.title), __jsx(ReactMarkdown, {\n    source: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nPostTemplate.getInitialProps = async context => {\n  const {\n    slug\n  } = context.query; // Import our .md file using the `slug` from the URL\n\n  const content = await import(`../../content/${slug}.md`); // Parse .md data through `matter`\n\n  const data = matter(content.default); // Pass data to the component props\n\n  return _objectSpread({}, data);\n};","map":{"version":3,"sources":["/Users/anti/Documents/GitHub/next-js-personal-website/next-js-with-markdown/pages/post/[slug].js"],"names":["React","matter","ReactMarkdown","PostTemplate","content","data","frontmatter","title","getInitialProps","context","slug","query","default"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAtB,EAAyC;AACtD;AACA,QAAMC,WAAW,GAAGD,IAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,WAAW,CAACC,KAAjB,CADF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAEDD,YAAY,CAACK,eAAb,GAA+B,MAAOC,OAAP,IAAmB;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAO,CAACE,KAAzB,CADgD,CAEhD;;AACA,QAAMP,OAAO,GAAG,MAAM,OAAQ,iBAAgBM,IAAK,KAA7B,CAAtB,CAHgD,CAKhD;;AACA,QAAML,IAAI,GAAGJ,MAAM,CAACG,OAAO,CAACQ,OAAT,CAAnB,CANgD,CAQhD;;AACA,2BAAYP,IAAZ;AACD,CAVD","sourcesContent":["import React from 'react'\nimport matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function PostTemplate({ content, data }) {\n  // This holds the data between `---` from the .md file\n  const frontmatter = data\n  \n  return (\n    <div>\n      <h1>{frontmatter.title}</h1>\n\n      <ReactMarkdown source={content} />\n    </div>\n  )\n}\n\nPostTemplate.getInitialProps = async (context) => {\n  const { slug } = context.query\n  // Import our .md file using the `slug` from the URL\n  const content = await import(`../../content/${slug}.md`)\n\n  // Parse .md data through `matter`\n  const data = matter(content.default)\n\n  // Pass data to the component props\n  return { ...data }\n}\n"]},"metadata":{},"sourceType":"module"}